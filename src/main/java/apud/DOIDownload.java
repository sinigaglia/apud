/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apud;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.AbstractCellEditor;
import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author Xando
 */
public class DOIDownload extends javax.swing.JFrame {

    private DOITableModel dtm;
    private String folder;
    private Thread t;

    public DOIDownload(String dir) {
        dtm = new DOITableModel();
        folder = dir + File.separator;
        initComponents();

        tabela.getColumn("Progresso").setCellRenderer(new CustomComponentRenderer());
        tabela.getColumn("Abrir").setCellRenderer(new CustomComponentRenderer());

        CustomCellEditor editor = new CustomCellEditor(tabela, dtm);
        tabela.getColumn("Abrir").setCellEditor(editor);
        tabela.setCellEditor(editor);
        
        setJTableColumnsWidth(tabela, tabela.getWidth(), 25, 15, 45, 15);
    }

    public static void setJTableColumnsWidth(JTable table, int tablePreferredWidth,
            double... percentages) {
        double total = 0;
        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            total += percentages[i];
        }

        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            TableColumn column = table.getColumnModel().getColumn(i);
            column.setPreferredWidth((int) (tablePreferredWidth * (percentages[i] / total)));
        }
    }

    public class CustomComponentRenderer implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (column == 1) {
                return dtm.getProgressos().get(row);
            } else {
                return dtm.getBotoes().get(row);
            }
        }
    }

    public static File showOpenFileDialog(JFrame parent, File directory) {
        JFileChooser fileChooser = new JFileChooser();
        Preferences pref = Preferences.userRoot().node(DOIDownload.class.getName());
        if (directory == null) {
            String path = pref.get("defaultDir", ".");
            fileChooser.setCurrentDirectory(new java.io.File(path));
        } else {
            fileChooser.setCurrentDirectory(directory);
        }

        int option = fileChooser.showOpenDialog(parent);
        if (option == JFileChooser.APPROVE_OPTION) {
            pref.put("defaultDir", fileChooser.getSelectedFile().getParentFile().getAbsolutePath());
            return fileChooser.getSelectedFile();
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        abrir = new javax.swing.JButton();
        avaliar = new javax.swing.JButton();
        parar = new javax.swing.JButton();
        baixar = new javax.swing.JButton();
        limpar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jSplitPane1.setDividerLocation(40);
        jSplitPane1.setDividerSize(1);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/open.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("apud/Bundle"); // NOI18N
        abrir.setText(bundle.getString("DOIDownload.abrir.text")); // NOI18N
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });

        avaliar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/tab_go.png"))); // NOI18N
        avaliar.setText(bundle.getString("DOIDownload.avaliar.text")); // NOI18N
        avaliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avaliarActionPerformed(evt);
            }
        });

        parar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/stop.png"))); // NOI18N
        parar.setEnabled(false);
        parar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pararActionPerformed(evt);
            }
        });

        baixar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/folder_page.png"))); // NOI18N
        baixar.setText(bundle.getString("DOIDownload.baixar.text")); // NOI18N
        baixar.setEnabled(false);
        baixar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baixarActionPerformed(evt);
            }
        });

        limpar.setText(bundle.getString("DOIDownload.limpar.text")); // NOI18N
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(abrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(avaliar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 394, Short.MAX_VALUE)
                .addComponent(limpar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baixar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(parar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(abrir)
                    .addComponent(avaliar)
                    .addComponent(parar)
                    .addComponent(baixar)
                    .addComponent(limpar))
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel1);

        area.setColumns(20);
        area.setRows(5);
        jScrollPane2.setViewportView(area);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(bundle.getString("DOIDownload.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        tabela.setModel(dtm);
        tabela.setSelectionBackground(new java.awt.Color(255, 153, 51));
        tabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabela);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(bundle.getString("DOIDownload.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jSplitPane1.setRightComponent(jTabbedPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        File f = showOpenFileDialog(this, null);
        if (f != null) {
            try {
                BufferedReader input = new BufferedReader(new InputStreamReader(new FileInputStream(f)));
                area.read(input, "");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(DOIDownload.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(DOIDownload.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_abrirActionPerformed

    private void avaliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avaliarActionPerformed
        Matcher m = BIBDOI.matcher(area.getText());
        if (m.find()) {
            addDoiEntry(m.group(2), m.group(1));
            while (m.find()) {
                addDoiEntry(m.group(2), m.group(1));
            }
        } else {
            m = GERAL_DOI.matcher(area.getText());
            if (m.find()) {
                addDoiEntry(m.group(1));
                while (m.find()) {
                    addDoiEntry(m.group(1));
                }
            }
        }
        if (dtm.getDois().size() > 0) {
            baixar.setEnabled(true);
        }
    }//GEN-LAST:event_avaliarActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        area.setText("");
        dtm.limpa();
        baixar.setEnabled(false);
    }//GEN-LAST:event_limparActionPerformed

    private void baixarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baixarActionPerformed
        jTabbedPane1.setSelectedIndex(1);
        parar.setEnabled(true);
        baixar.setEnabled(false);
        limpar.setEnabled(false);
        avaliar.setEnabled(false);

        t = new Thread(new Runnable() {
            @Override
            public void run() {

                for (int i = 0; i < dtm.getDois().size(); i++) {
                    if (!dtm.getBotoes().get(i).isEnabled()) {
                        tabela.getSelectionModel().setSelectionInterval((i > 0 ? i - 1 : i), i);
                        int ret = HTTPSDownloadUtility.downloadFile("https://sci-hub.do/" + dtm.getDois().get(i), dtm, i);
                        if (ret == 0 || (ret == 1 && dtm.getProgressos().get(i).getValue() < 100)) {
                            i--;
                        }
                    }
                    try {
                        Thread.sleep((long) (Math.random() * 500 + 200));
                    } catch (InterruptedException ex) {
                        Logger.getLogger(DOIDownload.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                parar.setEnabled(false);
                baixar.setEnabled(true);
                limpar.setEnabled(true);
                avaliar.setEnabled(true);
            }

        });
        t.start();

    }//GEN-LAST:event_baixarActionPerformed

    private void pararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pararActionPerformed
        t.stop();
        t = null;
        parar.setEnabled(false);
        limpar.setEnabled(true);
        baixar.setEnabled(true);
        avaliar.setEnabled(true);
    }//GEN-LAST:event_pararActionPerformed

    private void addDoiEntry(String doi) {
        dtm.adicionarRow(doi, this.folder + doi.replace('/', '@') + ".pdf");
    }

    private void addDoiEntry(String doi, String file) {
        dtm.adicionarRow(doi, this.folder + file + ".pdf");
    }

    private Pattern BIBDOI = Pattern.compile("@[A-Za-z]+\\{([^,]+),[^@]+doi=\\{([^}]+)\\}");
    private Pattern GERAL_DOI = Pattern.compile("(10\\.\\d{4,9}\\/[^\\s;]+)(?:\\s|;)");

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DOIDownload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DOIDownload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DOIDownload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DOIDownload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //JOptionPane.showMessageDialog(null, "Caro Angelo, não passar pra niguém essa birosca\nPuramente para nosso uso privado e na privada\n\nCassandro");
                new DOIDownload("download").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrir;
    private javax.swing.JTextArea area;
    private javax.swing.JButton avaliar;
    private javax.swing.JButton baixar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton limpar;
    private javax.swing.JButton parar;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
